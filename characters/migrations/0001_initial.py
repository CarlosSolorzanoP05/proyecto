# Generated by Django 5.2.3 on 2025-06-30 21:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Enemy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z\\s]+$', 'El nombre solo debe contener letras y espacios.')])),
                ('health', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(0)])),
                ('attack', models.IntegerField(default=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('defense', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('item_type', models.CharField(choices=[('SWORD', 'Espada (Guerrero)'), ('STAFF', 'Bastón (Mago)'), ('HEALTH_POTION', 'Poción de Vida'), ('MANA_POTION', 'Poción de Maná')], max_length=20)),
                ('damage_buff', models.IntegerField(blank=True, default=0, help_text='Daño adicional si es espada/bastón.', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('health_restore', models.IntegerField(blank=True, default=0, help_text='Cantidad de vida que cura si es poción de vida.', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('mana_restore', models.IntegerField(blank=True, default=0, help_text='Cantidad de maná que restaura si es poción de maná.', null=True, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Mage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z\\s]+$', 'El nombre solo debe contener letras y espacios.')])),
                ('health', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(0)])),
                ('defense', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('magic_damage', models.IntegerField(default=25, validators=[django.core.validators.MinValueValidator(0)])),
                ('mana', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(0)])),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Warrior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z\\s]+$', 'El nombre solo debe contener letras y espacios.')])),
                ('health', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(0)])),
                ('defense', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('damage', models.IntegerField(default=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warriors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
    ]
